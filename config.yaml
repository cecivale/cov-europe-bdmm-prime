# Modified Nextrain workflow from 2020-09-11
# MIT License
# Copyright (c) 2020 Nextstrain, full text https://github.com/nextstrain/ncov/blob/master/LICENSE


# This file contains defaults for the "config" object used in the Snakefile.
# To temporarily override or provide a value, you can use snakemake's --config
# or --configfile options.
---

# conda environment file to use by default
conda_environment: "/envs/nextstrain.yaml"

# These are the two main starting files for the run
# Files are previously downloaded from GISAID database, Downloads > nextmeta and nextfasta to the data folder
sequences: "data/201113_sequences.fasta"
metadata: "data/201113_metadata.tsv"

# Builds to run: subsampling + beas analysis
builds:
  # europe1:
  #     subsampling_scheme: uniformSarah_5demes
  #     beast_analysis: 
  #       - 200914_europe1
  # europe2:
  #     subsampling_scheme: uniformSarah_6demes
  #     beast_analysis: 
  #       - 201014_europe2
  # europe3a:
  #   subsampling_scheme: ssprop_Hubei
  #   beast_analysis: 
  #     - 201030_europe3
  # europe3b:
  #   subsampling_scheme: ssprop_China_old
  #   beast_analysis: 
  #     - 201030_europe3
  #     - 201113_europe3v2 # Uniformative priors for sampling proportions
  # europe3c:
  #   subsampling_scheme: ssprop_China
  #   beast_analysis: 
  #     - 201030_europe3
  # europeC:
  #     subsampling_scheme: ssprop_China
  #     beast_analysis: 
  # #     #- 201030_europe3 # No GLM
  # #     #- 201102_europe4 # Flight data 1 epoch
  # #     #- 201106_europe5 # Flight data 3 epochs
  # #     #- 201204_europe5b # Flight data normalized by pop 3 epochs
  # #      - 201211_europe6 # GLM 4 predictors 3 epochs
  # #      - 201215_europe7i2 # GLM 4p 3e with indicators
  # #      - 210113_europe7p2 # GLM 2p 3e with indicators
  #        - 210113_europe9fp2 
        
        # - 210129_europe10c
        # - 210129_europe10d
  # dsEurope:
  #     subsampling_scheme: dsprop_6demes
  #     beast_analysis: 
  #       - 210113_europe9ep2 # MCMC Coupled GLM 2p 3e with indicators
#  europeD:
#      subsampling_scheme: ssprop_China
#      beast_analysis: 
#        - 201211_europe6 # GLM 4 predictors 3 epochs
#        - 201215_europe7i2 # GLM 4p 3e indicators

  # europeE:
  #   subsampling_scheme: china_full
  #   beast_analysis: 
  #     - 210212_europe12
  europeC:
    subsampling_scheme: ssprop_China
    beast_analysis: 
      - 210205_europe10


# Define files used for external configuration. Common examples consist of a
# list of strains to include and exclude from analyses, a reference sequence to
# align sequences to.
files:
  include: "files/include.txt"
  exclude: "files/exclude.txt"
  reference: "files/reference_seq.gb"
  demes: "files/demes.csv"

# Filter settings
filter:
  # Require nearly full-length genomes.
  min_length: 27000

  # Omit sequences with incomplete date annotations, and USA seqs without a state.
  exclude_where: "division='USA' date='2020' date='2020-01-XX' date='2020-02-XX' date='2020-03-XX' date='2020-04-XX' date='2020-05-XX' date='2020-06-XX' date='2020-07-XX' date='2020-08-XX' date='2020-09-XX' date='2020-10-XX' date='2020-11-XX' date='2020-12-XX' date='2020-01' date='2020-02' date='2020-03' date='2020-04' date='2020-05' date='2020-06' date='2020-07' date='2020-08' date='2020-09' date='2020-10' date='2020-11' date='2020-12'"

  # Exclude sequences which are from before late 2019 (likely date mix-ups)
  min_date: 2019.74

  # Exclude sequences that are after this date
  max_date: 2020.183 # 2020-03-08

# Alignment settings
# Alignments are partitioned into smaller groups to speed up the overall alignment process.
# The number of sequences per group determines the run time of a single alignment job.
partition_sequences:
  sequences_per_group: 150

# Mask settings determine how the multiple sequence alignment is masked prior to phylogenetic inference.
mask:
  # Number of bases to mask from the beginning and end of the alignment. These regions of the genome
  # are difficult to sequence accurately.
  mask_from_beginning: 100
  mask_from_end: 50

  # Specific sites to mask in the reference genome's coordinates.
  # These are 1-indexed coordinates of sites that have been identified as prone to sequencing errors.
  # 13402, 24389 and 24390 are restricted to Belgian samples
  mask_sites: "13402 24389 24390"



# Subsampling schemes
subsampling:
  uniformSarah_5demes: # This subsampling was used in europe1 with augur subsample rule from nextstrain and including Sarah's analysis sequences
    hubei:
      #group_by: "division"
      #seq_per_group: 30
      #query: --query "(division == 'Hubei') & (date<='2020-01-23')"
      division: "Hubei"
      country: "China"
      region: "Asia"
      min_date: "2019-12-24"
      max_date: "2020-01-23"
      seq_per_deme: 31
      prob: "uniform"
    italy:
      #group_by: "country"
      #seq_per_group: 60
      #query: --query "(country == 'Italy') & (date<='2020-03-08')"
      country: "Italy"
      region: "Europe"
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 71
      prob: "uniform"
    germany:
      #group_by: "country"
      #seq_per_group: 50
      #query: --query "(country == 'Germany') & (date<='2020-03-08')"
      country: "Germany"
      region: "Europe"
      min_date: "2020-01-28"
      max_date: "2020-03-08"
      seq_per_deme: 45
      prob: "uniform"
    france:
      #group_by: "country"
      #seq_per_group: 50
      #query: --query "(country == 'France') & (date<='2020-03-08')"
      country: "France"
      region: "Europe"
      min_date: "2020-01-23"
      max_date: "2020-03-08"
      seq_per_deme: 74
      prob: "uniform"
    othereuropean:
      #group_by: "region"
      #seq_per_group: 60
      #query: --query "(region == 'Europe') & (country not in ['Italy', 'France', 'Germany']) & (date<='2020-03-08')"
      region: "Europe"
      exclude_country: ["France","Germany","Italy"]
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 80
      prob: "uniform"

  uniformSarah_6demes: # This subsampling was used in europe2 with augur subsample rule from nextstrain and including Sarah's analysis sequences
    hubei:
      #group_by: "division"
      #seq_per_group: 30
      #query: --query "(division == 'Hubei') & (date<='2020-01-23')"
      division: "Hubei"
      country: "China"
      region: "Asia"
      min_date: "2019-12-24"
      max_date: "2020-01-23"
      seq_per_deme: 31
      prob: "uniform"
    italy:
      #group_by: "country"
      #seq_per_group: 60
      #query: --query "(country == 'Italy') & (date<='2020-03-08')"
      country: "Italy"
      region: "Europe"
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 68
      prob: "uniform"
    germany:
      # group_by: "country"
      # seq_per_group: 50
      # query: --query "(country == 'Germany') & (date<='2020-03-08')"
      country: "Germany"
      region: "Europe"
      min_date: "2020-01-28"
      max_date: "2020-03-08"
      seq_per_deme: 51
      prob: "uniform"
    france:
      # group_by: "country"
      # seq_per_group: 50
      # query: --query "(country == 'France') & (date<='2020-03-08')"
      country: "France"
      region: "Europe"
      min_date: "2020-01-23"
      max_date: "2020-03-08"
      seq_per_deme: 75
      prob: "uniform"
    spain:
      # group_by: "country"
      # seq_per_group: 40
      # query: --query "(country == 'Spain') & (date<='2020-03-08')"
      country: "Spain"
      region: "Europe"
      min_date: "2020-02-24"
      max_date: "2020-03-08"
      seq_per_deme: 54
      prob: "uniform"
    othereuropean:
      # group_by: "region"
      # seq_per_group: 20
      # query: --query "(region == 'Europe') & (country not in ['Italy', 'France', 'Germany', 'Spain']) & (date<='2020-03-08')"
      region: "Europe"
      exclude_country: ["France","Germany","Italy","Spain"]
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 43
      prob: "uniform"

  ssprop_Hubei:
    France:
      country: "France"
      region: "Europe"
      min_date: "2020-01-23"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    Germany:
      country: "Germany"
      region: "Europe"
      min_date: "2020-01-28"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    Hubei:
      division: "Hubei"
      country: "China"
      region: "Asia"
      min_date: "2019-12-24"
      max_date: "2020-01-23"
      seq_per_deme: 60
      prob: "deaths"
    Italy:
      country: "Italy"
      region: "Europe"
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 60
      prob: "cases"
    OtherEuropean:
      region: "Europe"
      exclude_country: ["France","Germany","Italy","Spain"]
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 30
      prob: "cases_and_location"
    Spain:
      country: "Spain"
      region: "Europe"
      min_date: "2020-02-24"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"

  ssprop_China_old:
    France:
      country: "France"
      region: "Europe"
      min_date: "2020-01-23"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    Germany:
      country: "Germany"
      region: "Europe"
      min_date: "2020-01-28"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    Hubei-China:
      country: "China"
      region: "Asia"
      min_date: "2019-12-24"
      max_date: "2020-01-23"
      seq_per_deme: 60
      prob: "deaths"
    Italy:
      country: "Italy"
      region: "Europe"
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 60
      prob: "cases"
    OtherEuropean:
      region: "Europe"
      exclude_country: ["France","Germany","Italy","Spain"]
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 30
      prob: "cases_and_location"
    Spain:
      country: "Spain"
      region: "Europe"
      min_date: "2020-02-24"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"

  ssprop_China:
    France:
      country: "France"
      region: "Europe"
      min_date: "2020-01-23"
      max_date: "2020-03-08"
      seq_per_deme: 60
      prob: "cases"
    Germany:
      country: "Germany"
      region: "Europe"
      min_date: "2020-01-28"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    China:
      country: "China"
      region: "Asia"
      min_date: "2019-12-24"
      max_date: "2020-01-23"
      seq_per_deme: 60
      prob: "deaths"
    Italy:
      country: "Italy"
      region: "Europe"
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 60
      prob: "cases"
    OtherEuropean:
      region: "Europe"
      exclude_country: ["France","Germany","Italy","Spain"]
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    Spain:
      country: "Spain"
      region: "Europe"
      min_date: "2020-02-24"
      max_date: "2020-03-08"
      seq_per_deme: 60
      prob: "cases"

  dsprop_6demes:
    France:
      country: "France"
      region: "Europe"
      min_date: "2020-01-23"
      max_date: "2020-03-08"
      seq_per_deme: 20
      prob: "cases"
    Germany:
      country: "Germany"
      region: "Europe"
      min_date: "2020-01-28"
      max_date: "2020-03-08"
      seq_per_deme: 20
      prob: "cases"
    China:
      country: "China"
      region: "Asia"
      min_date: "2019-12-24"
      max_date: "2020-01-23"
      seq_per_deme: 20
      prob: "deaths"
    Italy:
      country: "Italy"
      region: "Europe"
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 20
      prob: "cases"
    OtherEuropean:
      region: "Europe"
      exclude_country: ["France","Germany","Italy","Spain"]
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 20
      prob: "cases"
    Spain:
      country: "Spain"
      region: "Europe"
      min_date: "2020-02-24"
      max_date: "2020-03-08"
      seq_per_deme: 20
      prob: "cases"

  china_full:
    France:
      country: "France"
      region: "Europe"
      min_date: "2020-01-23"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    Germany:
      country: "Germany"
      region: "Europe"
      min_date: "2020-01-28"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    China:
      country: "China"
      region: "Asia"
      min_date: "2019-12-24"
      max_date: "2020-03-08"
      seq_per_deme: 60
      prob: "deaths"
    Italy:
      country: "Italy"
      region: "Europe"
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 60
      prob: "cases"
    OtherEuropean:
      region: "Europe"
      exclude_country: ["France","Germany","Italy","Spain"]
      min_date: "2020-01-29"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"
    Spain:
      country: "Spain"
      region: "Europe"
      min_date: "2020-02-24"
      max_date: "2020-03-08"
      seq_per_deme: 50
      prob: "cases"

tree:
  tree-builder-args: "'-ninit 10 -n 4'"

# TreeTime settings
refine:
  root: "EPI_ISL_402123/China/2019-12-24" 
  clock_rate: 0.0008
  clock_std_dev: 0.0004
  coalescent: "skyline"
  date_inference: "marginal"
  divergence_unit: "mutations"
  clock_filter_iqd: 4


# BEAST2 analysis settings
beast:
  # BEAST2 jar file path
  #jar: "/cluster/home/ceciliav/BDMM-Prime.jar"
  jar: "/Users/maceci/code/mt-beast-dev/BDMM-Prime/out/artifacts/BDMM_Prime_jar/BDMM-Prime.jar"
  cpus_mcmc: 2
  # List of parallel mcmc chains seeds to run 
  n_mcmc: [1,2,3,4,5]
  # Length of a mcmc chain, it has to be the same length than the one specified in the xml file
  l_mcmc: 10000000
  # Time for mcmc chains in cluster in minutes
  t_mcmc: 7200
  t_traj: 720
  # Burnin percentage 
  burnin: 10
  # Minimum ESS value to combine chains
  min_ess: 50
  mcc_heights: "mean"
  # Trajectories
  n_traj: 200
  resample: 10000
  #n_particles: [300, 1000, 3000, 10000]
  n_particles: [300]

